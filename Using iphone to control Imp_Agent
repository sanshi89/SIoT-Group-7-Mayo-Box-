// HTTP request handler - This code is blocking - requests processed in order
const API_KEY = "1234";  //Make up a secure code, and enter it here and in the app
http.onrequest(function (req, resp) {
    try {
        local data = http.jsondecode(req.body);                             //Decode the request body to JSON
        server.log("Received: " + req.body);                                //Log the request body undecoded
        if ("api-key" in req.headers && req.headers["api-key"] == API_KEY) {
            server.log(req.headers["api-key"]);                             //Log the recieved API-Key
            if ("button1" in data) {                                        //Start checking the JSON for Keys
                device.send("button1", data.button1);                       
                device.on("button1", function(d) {
                    local json = "{ \"status\" : { \"button1\" : \"" + d + "\" }}";
                    resp.send(200,json);
                });
            }
            else if ("button2" in data) {
                device.send("button2", data.button2);
                device.on("button2", function(d) {
                    local json = "{ \"status\" : { \"button2\" : \"" + d + "\" }}";
                    resp.send(200,json);
                });
            }
            else if ("button3" in data) {
                device.send("button3", data.button3);
                device.on("button3", function(d) {
                    local json = "{ \"status\" : { \"button3\" : \"" + d + "\" }}";
                    resp.send(200,json);
                });
            }
            else if ("button4" in data) {
            device.send("button4", data.button3);
            device.on("button4", function(d) {
                local json = "{ \"status\" : { \"button4\" : \"" + d + "\" }}";       
                resp.send(200,json);
                });
            }
        }
        else {
            local json = "{ \"status\" : { \"auth\" : \"no\" }}";
            resp.send(401, json);
        }
    }
    catch (ex) {
    resp.send(500, "Internal Server Error: " + ex);
  }
});   
